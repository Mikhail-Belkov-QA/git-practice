plugins {
    id 'java'
    id('io.qameta.allure') version '2.11.2'
}

group 'org.example'
version '1.0-SNAPSHOT'

allure {
    report {
        version.set("2.19.0")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.19.0")
            }
        }
    }
}

repositories {
    mavenCentral()
}
compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

dependencies {
    implementation("io.github.bonigarcia:webdrivermanager:5.4.1")
    implementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
   implementation 'junit:junit-dep:4.5'
    implementation(platform('org.junit:junit-bom:5.9.3'))
   implementation('org.junit.jupiter:junit-jupiter')


    implementation 'org.seleniumhq.selenium:selenium-java:3.14.0'
    implementation 'io.github.bonigarcia:webdrivermanager:5.3.0'
   implementation(
            'com.codeborne:selenide:6.14.0',
            'org.junit.jupiter:junit-jupiter:5.9.3',
            'io.qameta.allure:allure-selenide:2.19.0'
    )
    implementation(
            'com.codeborne:selenide:6.14.0',
            'org.junit.jupiter:junit-jupiter:5.9.3',
            'io.qameta.allure:allure-selenide:2.19.0'
    )
    implementation 'com.epam.reportportal:logger-java-selenide:5.1.4'

}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    systemProperties(System.getProperties())
}
/*plugins {
    id 'java'
    id('io.qameta.allure') version '2.11.2'
}

group 'su.atb.forex'
version '1.0-SNAPSHOT'


allure {
    report {
        version.set("2.19.0")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.19.0")
            }
        }
    }
}


repositories {
    mavenCentral()
}


repositories {
    maven {
        name = 'sampleRepo'
        url = layout.buildDirectory.dir("repo")
    }
}

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

dependencies {
    implementation(
            'com.codeborne:selenide:6.14.0',
            'org.junit.jupiter:junit-jupiter:5.9.3',
            'io.qameta.allure:allure-selenide:2.19.0'

    )
    implementation("io.github.bonigarcia:webdrivermanager:5.4.1")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    systemProperties(System.getProperties())
}*/
/*plugins {
    id 'java'
    id 'io.qameta.allure' version '2.9.6'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
   implementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
   runtimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
   implementation 'org.seleniumhq.selenium:selenium-java:4.1.2'
   implementation 'io.github.bonigarcia:webdrivermanager:5.1.0'
    implementation 'com.codeborne:selenide:6.3.5'

    implementation 'org.aspectj:aspectjweaver:1.9.5'
   implementation 'io.qameta.allure:allure-junit5:2.12.1'
    implementation 'io.qameta.allure:allure-commandline:2.12.1'
   implementation 'io.qameta.allure:allure-assertj:2.12.1'
   implementation 'io.qameta.allure:allure-rest-assured:2.12.1'
  implementation 'io.qameta.allure:allure-java-commons:2.12.1'
   implementation 'io.qameta.allure:allure-selenide:2.12.1'
    implementation("io.github.bonigarcia:webdrivermanager:5.4.1")
    implementation(
            'com.codeborne:selenide:6.14.0',
            'org.junit.jupiter:junit-jupiter:5.9.3',
            'io.qameta.allure:allure-selenide:2.19.0'

    )
}

test {
    useJUnitPlatform()
}*/